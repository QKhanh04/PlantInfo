@page "{id:int}"
@using PlantManagement.DTOs

@model DetailModel
@{
    ViewData["Title"] = "Chi tiết cây trồng";
}

@section Styles {
    <link rel="stylesheet" href="~/css/detail.css" />
}

<div class="detail-container">
    <!-- Back Button -->
    <a class="back-button" href="javascript:history.back()" data-aos="fade-down">
        <i class="bi bi-arrow-left me-2"></i> Quay lại
    </a>

    <!-- Admin Action Buttons -->
    @if (User.IsInRole("Admin"))
    {
        <div class="action-buttons" data-aos="fade-down">
            <a asp-page="/Admin/Update" asp-route-id="@Model.Plants.PlantId" class="action-btn btn-edit">
                <i class="bi bi-pencil-square"></i> Sửa
            </a>
        </div>
    }

    <!-- Header Section -->
    <div class="plant-header" data-aos="fade-up">
        <div class="row align-items-center">
            <div class="col-lg-6">
                <!-- Rating Display -->
                <div class="rating-display mb-3">
                    <div class="stars-large">
                        @{
                            var avg = Model.RatingSummary.AverageRating;
                            int fullStars = (int)avg;
                            bool hasHalfStar = avg - fullStars >= 0.25 && avg - fullStars < 0.75;
                            @* phân từ 0.25 - 0.74 *@
                            int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                            for (int i = 0; i < fullStars; i++)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            if (hasHalfStar)
                            {
                                <i class="bi bi-star-half text-warning"></i>
                            }
                            for (int i = 0; i < emptyStars; i++)
                            {
                                <i class="bi bi-star text-warning"></i>
                            }
                        }
                    </div>
                    <span class="rating-score">@Model.RatingSummary.AverageRating</span>
                    <span class="rating-count">(@Model.RatingSummary.TotalReviews đánh giá)</span>
                </div>

                <div class="category-badges">
                    @foreach (var category in Model.Plants.Categories)
                    {
                        <span class="badge-custom" data-tooltip-content="@category.Description">
                            @category.CategoryName
                        </span>
                    }
                </div>

                <h1 class="plant-title">@Model.Plants.CommonName</h1>
                <div class="scientific-name">@Model.Plants.Species?.ScientificName</div>
                <p class="plant-description">@Model.Plants.Description</p>

                <div class="plant-meta">
                    <div class="meta-item">
                        <i class="bi bi-geo-alt"></i>
                        <span>@Model.Plants.Origin</span>
                    </div>
                    <div class="meta-item">
                        <i class="bi bi-eye"></i>
                        <span>1,234 lượt xem</span>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 mt-4 mt-lg-0">
                @{
                    var imageList = Model.Plants.Images ?? new List<PlantImageDTO>();
                    var mainImage = imageList.FirstOrDefault(img => img.IsPrimary)?.ImageUrl ??
                    imageList.FirstOrDefault()?.ImageUrl;
                }
                <div class="plant-image-gallery">
                    <div class="main-image">
                        <img id="mainPlantImage" src="@mainImage" alt="@Model.Plants.CommonName" />
                        <div class="image-overlay">
                            <button class="zoom-btn" onclick="openImageModal()">
                                <i class="bi bi-zoom-in"></i>
                            </button>
                        </div>
                    </div>

                    <div class="d-flex align-items-center justify-content-center mt-3">
                        <button type="button" class="thumbnail-nav-btn" id="thumbPrev" onclick="showThumbnail(-1)">
                            <i class="bi bi-chevron-left"></i>
                        </button>
                        <div id="thumbnailList" class="thumbnail-container"></div>
                        <button type="button" class="thumbnail-nav-btn" id="thumbNext" onclick="showThumbnail(1)">
                            <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Section - Growth Conditions -->
    <div class="stats-section" data-aos="fade-up" data-aos-delay="100">
        <div class="row g-4">
            <div class="col-lg col-md-6">
                <div class="stat-card">
                    <div class="stat-icon-wrapper sunlight">
                        <i class="bi bi-brightness-high stat-icon"></i>
                    </div>
                    <div class="stat-title">Ánh sáng</div>
                    <div class="stat-value">@Model.Plants.GrowthCondition?.Sunlight</div>
                    <div class="stat-progress">
                        <div class="progress-bar" style="width: 80%"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg col-md-6">
                <div class="stat-card">
                    <div class="stat-icon-wrapper water">
                        <i class="bi bi-droplet stat-icon"></i>
                    </div>
                    <div class="stat-title">Tưới nước</div>
                    <div class="stat-value">@Model.Plants.GrowthCondition?.WaterRequirement</div>
                    <div class="stat-progress">
                        <div class="progress-bar" style="width: 60%"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg col-md-6">
                <div class="stat-card">
                    <div class="stat-icon-wrapper temp">
                        <i class="bi bi-thermometer-half stat-icon"></i>
                    </div>
                    <div class="stat-title">Nhiệt độ</div>
                    <div class="stat-value">@Model.Plants.GrowthCondition?.TemperatureRange</div>
                    <div class="stat-progress">
                        <div class="progress-bar" style="width: 70%"></div>
                    </div>
                </div>
            </div>
            @* <div class="col-lg col-md-6">
                <div class="stat-card">
                    <div class="stat-icon-wrapper soil">
                        <i class="bi bi-layers stat-icon"></i>
                    </div>
                    <div class="stat-title">Loại đất</div>
                    <div class="stat-value">@Model.Plants.GrowthCondition?.SoilType</div>
                    <div class="stat-progress">
                        <div class="progress-bar" style="width: 85%"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg col-md-6">
                <div class="stat-card">
                    <div class="stat-icon-wrapper climate">
                        <i class="bi bi-cloud-sun stat-icon"></i>
                    </div>
                    <div class="stat-title">Khí hậu</div>
                    <div class="stat-value">@Model.Plants.GrowthCondition?.Climate</div>
                    <div class="stat-progress">
                        <div class="progress-bar" style="width: 75%"></div>
                    </div>
                </div>
            </div> *@
        </div>
    </div>

    <!-- Info Sections -->
    <div class="info-section" data-aos="fade-up" data-aos-delay="200">
        <div class="row g-4">
            <div class="col-md-6">
                <div class="info-box">
                    <div class="section-header">
                        <i class="bi bi-info-circle section-icon"></i>
                        <div class="section-title">Thông tin cơ bản</div>
                    </div>
                    <div class="info-content">
                        <div class="kv-row">
                            <div class="kv-key"><i class="bi bi-flower1"></i> Họ thực vật</div>
                            <div class="kv-value">@Model.Plants.Species?.Family</div>
                        </div>
                        <div class="divider"></div>
                        <div class="kv-row">
                            <div class="kv-key"><i class="bi bi-diagram-3"></i> Chi</div>
                            <div class="kv-value">@Model.Plants.Species?.Genus</div>
                        </div>
                        <div class="divider"></div>
                        <div class="kv-row">
                            <div class="kv-key"><i class="bi bi-collection"></i> Bộ</div>
                            <div class="kv-value">@Model.Plants.Species?.OrderName</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="info-box">
                    <div class="section-header">
                        <i class="bi bi-cloud-sun section-icon"></i>
                        <div class="section-title">Điều kiện sinh trưởng</div>
                    </div>
                    <div class="info-content">
                        <div class="kv-row">
                            <div class="kv-key"><i class="bi bi-layers"></i> Loại đất</div>
                            <div class="kv-value">@Model.Plants.GrowthCondition?.SoilType</div>
                        </div>
                        <div class="divider"></div>
                        <div class="kv-row">
                            <div class="kv-key"><i class="bi bi-sun"></i> Ánh sáng</div>
                            <div class="kv-value">@Model.Plants.GrowthCondition?.Sunlight</div>
                        </div>
                        <div class="divider"></div>
                        <div class="kv-row">
                            <div class="kv-key"><i class="bi bi-thermometer"></i> Khí hậu</div>
                            <div class="kv-value">@Model.Plants.GrowthCondition?.Climate</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Uses and Diseases -->
    <div class="info-section" data-aos="fade-up" data-aos-delay="300">
        <div class="row g-4">
            <div class="col-md-6">
                <div class="info-box">
                    <div class="section-header">
                        <i class="bi bi-heart-pulse section-icon"></i>
                        <div class="section-title">Công dụng chính</div>
                    </div>
                    <div class="badge-list">
                        @foreach (var use in Model.Plants.Uses)
                        {
                            <span class="badge-item use-badge" data-tooltip-content="@use.Description">
                                <i class="bi bi-check-circle"></i>
                                @use.UseName
                            </span>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="info-box">
                    <div class="section-header">
                        <i class="bi bi-bug section-icon"></i>
                        <div class="section-title">Bệnh thường gặp</div>
                    </div>
                    <div class="badge-list">
                        @foreach (var disease in Model.Plants.Diseases)
                        {
                            <span class="badge-item disease-badge"
                                data-tooltip-content="<b>Triệu chứng:</b> @disease.Symptoms<br/><b>Cách chữa:</b> @disease.Treatment">
                                <i class="bi bi-exclamation-triangle"></i>
                                @disease.DiseaseName
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- References -->
    <div class="info-section" data-aos="fade-up" data-aos-delay="400">
        <div class="info-box">
            <div class="section-header">
                <i class="bi bi-book section-icon"></i>
                <div class="section-title">Tài liệu tham khảo</div>
            </div>
            @if (Model.Plants.References != null && Model.Plants.References.Any())
            {
                <div class="references-grid">
                    @foreach (var reference in Model.Plants.References)
                    {
                        <div class="reference-card">
                            <div class="reference-icon">
                                <i class="bi bi-journal-text"></i>
                            </div>
                            <div class="reference-content">
                                <h4>@reference.SourceName</h4>
                                @if (!string.IsNullOrEmpty(reference.Author))
                                {
                                    <p class="author">Tác giả: @reference.Author</p>
                                }
                                @if (reference.PublishedYear.HasValue)
                                {
                                    <p class="year">Năm: @reference.PublishedYear</p>
                                }
                                @if (!string.IsNullOrEmpty(reference.Url))
                                {
                                    <a href="@reference.Url" target="_blank" class="reference-link">
                                        Xem chi tiết <i class="bi bi-arrow-right"></i>
                                    </a>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">Chưa có tài liệu tham khảo.</p>
            }
        </div>
    </div>

    <!-- Rating & Review Section -->
    <!-- Rating & Review Section -->
    <div class="info-section" data-aos="fade-up" data-aos-delay="500">
        <div class="info-box">
            <div class="section-header">
                <i class="bi bi-star section-icon"></i>
                <div class="section-title">Đánh giá & Nhận xét</div>
            </div>

            <!-- Rating Summary -->
            <div class="rating-summary">
                <div class="rating-overview">
                    <div class="rating-score-large">@Model.RatingSummary.AverageRating</div>
                    <div class="rating-stars-large">
                        @{
                            for (int i = 0; i < fullStars; i++)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            if (hasHalfStar)
                            {
                                <i class="bi bi-star-half text-warning"></i>
                            }
                            for (int i = 0; i < emptyStars; i++)
                            {
                                <i class="bi bi-star text-warning"></i>
                            }
                        }
                    </div>
                    <div class="rating-total">@Model.RatingSummary.TotalReviews đánh giá</div>
                </div>
                <div class="rating-breakdown">
                    @{
                        int total = Model.RatingSummary.TotalReviews == 0 ? 1 : Model.RatingSummary.TotalReviews;
                        double percent5 = Model.RatingSummary.FiveStars * 100.0 / total;
                        double percent4 = Model.RatingSummary.FourStars * 100.0 / total;
                        double percent3 = Model.RatingSummary.ThreeStars * 100.0 / total;
                        double percent2 = Model.RatingSummary.TwoStars * 100.0 / total;
                        double percent1 = Model.RatingSummary.OneStar * 100.0 / total;
                    }
                    <div class="rating-bar-item">
                        <span>5 <i class="bi bi-star-fill"></i></span>
                        <div class="bar">
                            <div class="fill" style="width: @percent5%"></div>
                        </div>
                        <span>@Model.RatingSummary.FiveStars</span>
                    </div>
                    <div class="rating-bar-item">
                        <span>4 <i class="bi bi-star-fill"></i></span>
                        <div class="bar">
                            <div class="fill" style="width: @percent4%"></div>
                        </div>
                        <span>@Model.RatingSummary.FourStars</span>
                    </div>
                    <div class="rating-bar-item">
                        <span>3 <i class="bi bi-star-fill"></i></span>
                        <div class="bar">
                            <div class="fill" style="width: @percent3%"></div>
                        </div>
                        <span>@Model.RatingSummary.ThreeStars</span>
                    </div>
                    <div class="rating-bar-item">
                        <span>2 <i class="bi bi-star-fill"></i></span>
                        <div class="bar">
                            <div class="fill" style="width: @percent2%"></div>
                        </div>
                        <span>@Model.RatingSummary.TwoStars</span>
                    </div>
                    <div class="rating-bar-item">
                        <span>1 <i class="bi bi-star-fill"></i></span>
                        <div class="bar">
                            <div class="fill" style="width: @percent1%"></div>
                        </div>
                        <span>@Model.RatingSummary.OneStar</span>
                    </div>
                </div>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
            @* Kiểm tra xem người dùng đã đánh giá chưa *@
            @functions {
                public string TimeAgo(DateTime date)
                {
                    var ts = DateTime.Now - date;
                    if (ts.TotalDays >= 7)
                        return $"{(int)(ts.TotalDays / 7)} tuần trước";
                    if (ts.TotalDays >= 1)
                        return $"{(int)ts.TotalDays} ngày trước";
                    if (ts.TotalHours >= 1)
                        return $"{(int)ts.TotalHours} giờ trước";
                    if (ts.TotalMinutes >= 1)
                        return $"{(int)ts.TotalMinutes} phút trước";
                    return "Vừa xong";
                }
            }
            var userReview = Model.Reviews?.FirstOrDefault(r => r.UserName == User.Identity.Name);

            @if (userReview != null)
            {
                <!-- Hiển thị đánh giá hiện tại của người dùng -->
                <div class="user-existing-review">
                    <div class="alert alert-info">
                        <i class="bi bi-check-circle-fill me-2"></i>
                        <strong>Bạn đã đánh giá cây này!</strong>
                        <span class="ms-2">Mỗi người chỉ có thể đánh giá một lần.</span>
                    </div>

                    <div class="review-item my-review-highlight">
                        <div class="my-review-badge">
                            <i class="bi bi-person-check-fill"></i> Đánh giá của bạn
                        </div>
                        <div class="review-header">
                            <div class="user-avatar">
                                <i class="bi bi-person-circle"></i>
                            </div>
                            <div class="user-info">
                                <h5>@userReview.UserName</h5>
                                <div class="review-meta">
                                    <div class="stars-small">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= userReview.Rating)
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                    </div>
                                    <span class="review-date">@TimeAgo(userReview.CreatedAt)</span>
                                </div>
                            </div>
                        </div>
                        <div class="review-content">
                            <p>@userReview.Comment</p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <!-- Form đánh giá cho người chưa đánh giá -->
                <form method="post" asp-page-handler="Review">
                    <div class="review-form">
                        <div class="form-header-info">
                            <h4>Viết đánh giá của bạn</h4>
                            <span class="text-muted">
                                <i class="bi bi-info-circle"></i> Bạn chỉ có thể đánh giá một lần
                            </span>
                        </div>
                        <div class="rating-input">
                            <label>Chọn số sao:</label>
                            <div class="star-rating">
                                <i class="bi bi-star" data-rating="1"></i>
                                <i class="bi bi-star" data-rating="2"></i>
                                <i class="bi bi-star" data-rating="3"></i>
                                <i class="bi bi-star" data-rating="4"></i>
                                <i class="bi bi-star" data-rating="5"></i>
                            </div>
                            <input type="hidden" asp-for="NewReview.Rating" id="rating-value" />
                        </div>
                        <textarea class="form-control" rows="4" asp-for="NewReview.Comment"
                            placeholder="Chia sẻ trải nghiệm của bạn về cây này..."></textarea>
                        <button type="submit" class="btn-submit-review">
                            <i class="bi bi-send"></i> Gửi đánh giá
                        </button>
                    </div>
                </form>
            }
                        }
                        else
            {
                <div class="login-prompt">
                    <i class="bi bi-lock"></i>
                    <p>Vui lòng <a asp-page="/Auth/Authentication"
                            asp-route-returnUrl="@PageContext.HttpContext.Request.Path">
                            Đăng nhập
                        </a> để viết đánh giá</p>
                </div>
            }

            <!-- Reviews List -->
            <div class="reviews-list">
                <h4 class="reviews-list-title">Tất cả đánh giá (@Model.RatingSummary.TotalReviews)</h4>

                @if (Model.Reviews != null && Model.Reviews.Count > 0)
                {
                    @* Hiển thị các đánh giá của người khác *@
                    var otherReviews = Model.Reviews.Where(r => r.UserName != User.Identity.Name).ToList();

                    @foreach (var review in otherReviews)
                    {
                        <div class="review-item">
                            <div class="review-header">
                                <div class="user-avatar">
                                    <i class="bi bi-person-circle"></i>
                                </div>
                                <div class="user-info">
                                    <h5>@(review.UserName ?? "Ẩn danh")</h5>
                                    <div class="review-meta">
                                        <div class="stars-small">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= review.Rating)
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-star text-warning"></i>
                                                }
                                            }
                                        </div>
                                        <span class="review-date">@TimeAgo(review.CreatedAt)</span>
                                    </div>
                                </div>
                            </div>
                            <div class="review-content">
                                <p>@review.Comment</p>
                            </div>
                        </div>
                    }

                    @if (otherReviews.Count > 5)
                    {
                        <button class="btn-load-more">
                            <i class="bi bi-arrow-down-circle"></i> Xem thêm đánh giá
                        </button>
                    }
                }
                else
                {
                    <div class="no-reviews-message">
                        <i class="bi bi-chat-left-text"></i>
                        <p>Chưa có đánh giá nào. Hãy là người đầu tiên đánh giá!</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Image Modal -->
<div id="imageModal" class="image-modal">
    <span class="close-modal">&times;</span>
    <img class="modal-content" id="modalImage">
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>
    <script src="https://unpkg.com/@@popperjs/core@2"></script>

    <script>
        AOS.init({
            duration: 800,
            easing: 'ease-out-cubic',
            once: true
        });

        // Thumbnail carousel logic
        const imageList = [
                @foreach (var img in Model.Plants.Images ?? new List<PlantImageDTO>())
            {
                <text>
                    {
                        url: "@img.ImageUrl",
                    isPrimary: @img.IsPrimary.ToString().ToLower()
                            },
                </text>
                            }
                            ];

        let thumbStart = 0;
        const thumbPerPage = 5;

        function renderThumbnails() {
            const container = document.getElementById('thumbnailList');
            container.innerHTML = '';
            for (let i = thumbStart; i < Math.min(imageList.length, thumbStart + thumbPerPage); i++) {
                const img = imageList[i];
                const el = document.createElement('img');
                el.src = img.url;
                el.className = 'thumbnail-img' + (img.isPrimary ? ' active' : '');
                el.onclick = function () {
                    document.getElementById('mainPlantImage').src = img.url;
                    document.querySelectorAll('.thumbnail-img').forEach(t => t.classList.remove('active'));
                    el.classList.add('active');
                };
                container.appendChild(el);
            }
            document.getElementById('thumbPrev').disabled = (thumbStart === 0);
            document.getElementById('thumbNext').disabled = (thumbStart + thumbPerPage >= imageList.length);
        }

        function showThumbnail(direction) {
            thumbStart += direction;
            if (thumbStart < 0) thumbStart = 0;
            if (thumbStart > imageList.length - thumbPerPage) thumbStart = imageList.length - thumbPerPage;
            renderThumbnails();
        }

        // Image Modal
        function openImageModal() {
            const modal = document.getElementById('imageModal');
            const modalImg = document.getElementById('modalImage');
            const mainImg = document.getElementById('mainPlantImage');
            modal.style.display = "block";
            modalImg.src = mainImg.src;
        }

        document.querySelector('.close-modal')?.addEventListener('click', function () {
            document.getElementById('imageModal').style.display = "none";
        });

        // Tooltip functionality
        document.addEventListener('DOMContentLoaded', function () {
            renderThumbnails();

            const badgeItems = document.querySelectorAll('.badge-item, .badge-custom');
            let tooltipEl = null;
            let popperInstance = null;

            badgeItems.forEach(badge => {
                badge.addEventListener('mouseenter', function () {
                    tooltipEl = document.createElement('div');
                    tooltipEl.className = 'custom-tooltip';
                    tooltipEl.innerHTML = badge.getAttribute('data-tooltip-content');
                    document.body.appendChild(tooltipEl);

                    popperInstance = Popper.createPopper(badge, tooltipEl, {
                        placement: 'top',
                        modifiers: [{ name: 'offset', options: { offset: [0, 8] } }]
                    });
                });

                badge.addEventListener('mouseleave', function () {
                    if (tooltipEl) {
                        document.body.removeChild(tooltipEl);
                        tooltipEl = null;
                    }
                    if (popperInstance) {
                        popperInstance.destroy();
                        popperInstance = null;
                    }
                });
            });

            // Star rating interaction
            const stars = document.querySelectorAll('.star-rating i');
            let selectedRating = 0;

            stars.forEach(star => {
                star.addEventListener('click', function () {
                    selectedRating = parseInt(this.getAttribute('data-rating'));
                    updateStars(selectedRating);
                });

                star.addEventListener('mouseenter', function () {
                    const rating = parseInt(this.getAttribute('data-rating'));
                    updateStars(rating);
                });
            });

            document.querySelector('.star-rating')?.addEventListener('mouseleave', function () {
                updateStars(selectedRating);
            });

            function updateStars(rating) {
                stars.forEach(star => {
                    const starRating = parseInt(star.getAttribute('data-rating'));
                    if (starRating <= rating) {
                        star.classList.remove('bi-star');
                        star.classList.add('bi-star-fill');
                    } else {
                        star.classList.remove('bi-star-fill');
                        star.classList.add('bi-star');
                    }
                });
                document.getElementById('rating-value').value = rating;
            }
        });
    </script>
}