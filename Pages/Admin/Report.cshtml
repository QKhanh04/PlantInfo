@page
@model PlantManagement.Pages.Admin.Report
@{
    ViewData["Title"] = "Report";
}

<h1>@ViewData["Title"]</h1>

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Th·ªëng K√™ Admin - Qu·∫£n L√Ω C√¢y Tr·ªìng</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <link rel="stylesheet" href="~/css/admin/report.css" />

</head>

<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>üìä Th·ªëng K√™ Qu·∫£n L√Ω C√¢y Tr·ªìng</h1>
            <p>T·ªïng quan v√† ph√¢n t√≠ch d·ªØ li·ªáu h·ªá th·ªëng</p>
        </div>

        <!-- Filters -->
        <div class="filters">
            <div class="filter-group">
                <label>üìÖ Th·ªùi gian:</label>
                <select id="dateRange">
                    <option value="today">H√¥m nay</option>
                    <option value="thisWeek">Tu·∫ßn n√†y</option>
                    <option value="thisMonth" selected>Th√°ng n√†y</option>
                    <option value="thisYear">NƒÉm n√†y</option>
                    <option value="all">T·∫•t c·∫£</option>
                </select>
            </div>

            <div class="filter-group">
                <label>üîç Danh m·ª•c:</label>
                <select id="categoryFilter">
                    <option value="all">T·∫•t c·∫£ danh m·ª•c</option>
                    <option value="fruit">C√¢y ƒÉn qu·∫£</option>
                    <option value="industrial">C√¢y c√¥ng nghi·ªáp</option>
                    <option value="medicinal">C√¢y d∆∞·ª£c li·ªáu</option>
                    <option value="ornamental">C√¢y c·∫£nh</option>
                </select>
            </div>

            <button class="btn-export" onclick="exportReport()">
                <span>üì•</span>
                <span>Xu·∫•t b√°o c√°o</span>
            </button>
        </div>

        <!-- Stats Cards -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-info">
                        <h3>T·ªïng s·ªë c√¢y tr·ªìng</h3>
                        <div class="stat-value" style="color: #10b981;">245</div>
                        <div class="stat-trend">
                            <span>‚Üó</span>
                            <span>+6.5% so v·ªõi th√°ng tr∆∞·ªõc</span>
                        </div>
                    </div>
                    <div class="stat-icon" style="background: rgba(16, 185, 129, 0.1);">
                        <span style="color: #10b981;">üå±</span>
                    </div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-info">
                        <h3>T·ªïng s·ªë ng∆∞·ªùi d√πng</h3>
                        <div class="stat-value" style="color: #3b82f6;">1,523</div>
                        <div class="stat-trend">
                            <span>‚Üó</span>
                            <span>+12.3% so v·ªõi th√°ng tr∆∞·ªõc</span>
                        </div>
                    </div>
                    <div class="stat-icon" style="background: rgba(59, 130, 246, 0.1);">
                        <span style="color: #3b82f6;">üë•</span>
                    </div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-info">
                        <h3>L∆∞·ª£t t√¨m ki·∫øm</h3>
                        <div class="stat-value" style="color: #f59e0b;">8,947</div>
                        <div class="stat-trend">
                            <span>‚Üó</span>
                            <span>+8.1% so v·ªõi th√°ng tr∆∞·ªõc</span>
                        </div>
                    </div>
                    <div class="stat-icon" style="background: rgba(245, 158, 11, 0.1);">
                        <span style="color: #f59e0b;">üîç</span>
                    </div>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-card-content">
                    <div class="stat-info">
                        <h3>C√¢y y√™u th√≠ch</h3>
                        <div class="stat-value" style="color: #ef4444;">1,963</div>
                        <div class="stat-trend">
                            <span>‚Üó</span>
                            <span>+15.7% so v·ªõi th√°ng tr∆∞·ªõc</span>
                        </div>
                    </div>
                    <div class="stat-icon" style="background: rgba(239, 68, 68, 0.1);">
                        <span style="color: #ef4444;">‚ù§Ô∏è</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts Row 1 -->
        <div class="charts-grid">
            <!-- Pie Chart -->
            <div class="chart-card">
                <div class="chart-header">
                    <h2>Ph√¢n b·ªë theo danh m·ª•c</h2>
                    <button class="btn-download" onclick="downloadChart('pieChart')">üì•</button>
                </div>
                <canvas id="pieChart"></canvas>
            </div>

            <!-- Line Chart -->
            <div class="chart-card">
                <div class="chart-header">
                    <h2>Xu h∆∞·ªõng t√¨m ki·∫øm</h2>
                    <button class="btn-download" onclick="downloadChart('lineChart')">üì•</button>
                </div>
                <canvas id="lineChart"></canvas>
            </div>
        </div>

        <!-- Charts Row 2 -->
        <div class="charts-grid">
            <!-- Bar Chart -->
            <div class="chart-card">
                <div class="chart-header">
                    <h2>Top c√¢y ƒë∆∞·ª£c y√™u th√≠ch</h2>
                    <button class="btn-download" onclick="downloadChart('barChart')">üì•</button>
                </div>
                <canvas id="barChart"></canvas>
            </div>

            <!-- Keywords List -->
            <div class="chart-card">
                <div class="chart-header">
                    <h2>T·ª´ kh√≥a t√¨m ki·∫øm ph·ªï bi·∫øn</h2>
                    <button class="btn-download" onclick="exportKeywords()">üì•</button>
                </div>
                <ul class="keywords-list" id="keywordsList"></ul>
            </div>
        </div>

        <!-- Charts Row 3 -->
        <div class="charts-grid">
            <!-- New Plants Chart -->
            <div class="chart-card">
                <div class="chart-header">
                    <h2>C√¢y tr·ªìng m·ªõi theo th√°ng</h2>
                    <button class="btn-download" onclick="downloadChart('newPlantsChart')">üì•</button>
                </div>
                <canvas id="newPlantsChart"></canvas>
            </div>

            <!-- User Activity Chart -->
            <div class="chart-card">
                <div class="chart-header">
                    <h2>Ho·∫°t ƒë·ªông ng∆∞·ªùi d√πng</h2>
                    <button class="btn-download" onclick="downloadChart('userActivityChart')">üì•</button>
                </div>
                <canvas id="userActivityChart"></canvas>
            </div>
        </div>

        <!-- Summary Table -->
        <div class="summary-table">
            <div class="chart-header">
                <h2>B·∫£ng t·ªïng h·ª£p chi ti·∫øt</h2>
                <button class="btn-export" onclick="exportTableToExcel()">
                    <span>üì•</span>
                    <span>Xu·∫•t Excel</span>
                </button>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Danh m·ª•c</th>
                        <th style="text-align: right;">S·ªë l∆∞·ª£ng</th>
                        <th style="text-align: right;">T·ª∑ l·ªá</th>
                        <th style="text-align: right;">Xu h∆∞·ªõng</th>
                    </tr>
                </thead>
                <tbody id="summaryTableBody"></tbody>
            </table>
        </div>
    </div>

    <script>
        // Mock Data
        const data = {
            categories: [
                { name: 'C√¢y ƒÉn qu·∫£', count: 85, percentage: 34.7 },
                { name: 'C√¢y c√¥ng nghi·ªáp', count: 62, percentage: 25.3 },
                { name: 'C√¢y d∆∞·ª£c li·ªáu', count: 48, percentage: 19.6 },
                { name: 'C√¢y c·∫£nh', count: 35, percentage: 14.3 },
                { name: 'C√¢y kh√°c', count: 15, percentage: 6.1 }
            ],
            topFavorites: [
                { name: 'Hoa h·ªìng', favorites: 342 },
                { name: 'Lan h·ªì ƒëi·ªáp', favorites: 298 },
                { name: 'Sen ƒë√°', favorites: 256 },
                { name: 'Phong lan', favorites: 234 },
                { name: 'X∆∞∆°ng r·ªìng', favorites: 189 },
                { name: 'Bonsai', favorites: 167 },
                { name: 'C√¢y xanh VP', favorites: 145 },
                { name: 'C√¢y thu·ªëc', favorites: 132 }
            ],
            searchTrends: [
                { month: 'T1', searches: 680 },
                { month: 'T2', searches: 720 },
                { month: 'T3', searches: 850 },
                { month: 'T4', searches: 920 },
                { month: 'T5', searches: 1100 },
                { month: 'T6', searches: 1050 },
                { month: 'T7', searches: 980 },
                { month: 'T8', searches: 1150 },
                { month: 'T9', searches: 1200 },
                { month: 'T10', searches: 890 }
            ],
            newPlants: [
                { month: 'T1', plants: 12 },
                { month: 'T2', plants: 15 },
                { month: 'T3', plants: 18 },
                { month: 'T4', plants: 22 },
                { month: 'T5', plants: 25 },
                { month: 'T6', plants: 20 },
                { month: 'T7', plants: 16 },
                { month: 'T8', plants: 19 },
                { month: 'T9', plants: 23 },
                { month: 'T10', plants: 15 }
            ],
            topKeywords: [
                { keyword: 'c√¢y c·∫£nh', count: 523 },
                { keyword: 'c√¢y d∆∞·ª£c li·ªáu', count: 487 },
                { keyword: 'sen ƒë√°', count: 456 },
                { keyword: 'hoa h·ªìng', count: 423 },
                { keyword: 'lan', count: 398 },
                { keyword: 'bonsai', count: 367 },
                { keyword: 'c√¢y vƒÉn ph√≤ng', count: 334 },
                { keyword: 'x∆∞∆°ng r·ªìng', count: 298 }
            ],
            userActivity: {
                months: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10'],
                newUsers: [142, 156, 178, 192, 203, 187, 165, 198, 215, 176],
                activeUsers: [890, 920, 985, 1050, 1120, 1090, 1010, 1150, 1280, 1200]
            }
        };

        // Initialize Pie Chart
        const pieCtx = document.getElementById('pieChart').getContext('2d');
        new Chart(pieCtx, {
            type: 'pie',
            data: {
                labels: data.categories.map(c => c.name),
                datasets: [{
                    data: data.categories.map(c => c.count),
                    backgroundColor: [
                        '#10b981',
                        '#3b82f6',
                        '#f59e0b',
                        '#ef4444',
                        '#8b5cf6'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Initialize Line Chart
        const lineCtx = document.getElementById('lineChart').getContext('2d');
        new Chart(lineCtx, {
            type: 'line',
            data: {
                labels: data.searchTrends.map(s => s.month),
                datasets: [{
                    label: 'L∆∞·ª£t t√¨m ki·∫øm',
                    data: data.searchTrends.map(s => s.searches),
                    borderColor: '#10b981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Initialize Bar Chart
        const barCtx = document.getElementById('barChart').getContext('2d');
        new Chart(barCtx, {
            type: 'bar',
            data: {
                labels: data.topFavorites.map(f => f.name),
                datasets: [{
                    label: 'L∆∞·ª£t y√™u th√≠ch',
                    data: data.topFavorites.map(f => f.favorites),
                    backgroundColor: '#ef4444'
                }]
            },
            options: {
                responsive: true,
                indexAxis: 'y',
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Initialize New Plants Chart
        const newPlantsCtx = document.getElementById('newPlantsChart').getContext('2d');
        new Chart(newPlantsCtx, {
            type: 'bar',
            data: {
                labels: data.newPlants.map(p => p.month),
                datasets: [{
                    label: 'S·ªë l∆∞·ª£ng c√¢y m·ªõi',
                    data: data.newPlants.map(p => p.plants),
                    backgroundColor: '#10b981'
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Initialize User Activity Chart
        const userActivityCtx = document.getElementById('userActivityChart').getContext('2d');
        new Chart(userActivityCtx, {
            type: 'line',
            data: {
                labels: data.userActivity.months,
                datasets: [{
                    label: 'Ng∆∞·ªùi d√πng m·ªõi',
                    data: data.userActivity.newUsers,
                    borderColor: '#3b82f6',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.4
                }, {
                    label: 'Ng∆∞·ªùi d√πng ho·∫°t ƒë·ªông',
                    data: data.userActivity.activeUsers,
                    borderColor: '#10b981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Render Keywords List
        const keywordsList = document.getElementById('keywordsList');
        const maxCount = data.topKeywords[0].count;
        data.topKeywords.forEach((item, index) => {
            const percentage = (item.count / maxCount) * 100;
            keywordsList.innerHTML += `
                <li class="keyword-item">
                    <div class="keyword-left">
                        <span class="keyword-rank">#${index + 1}</span>
                        <span class="keyword-name">${item.keyword}</span>
                    </div>
                    <div class="keyword-right">
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${percentage}%"></div>
                        </div>
                        <span class="keyword-count">${item.count}</span>
                    </div>
                </li>
            `;
        });

        // Render Summary Table
        const tableBody = document.getElementById('summaryTableBody');
        data.categories.forEach(item => {
            const trend = (Math.random() * 10).toFixed(1);
            tableBody.innerHTML += `
                <tr>
                    <td>${item.name}</td>
                    <td style="text-align: right;">${item.count}</td>
                    <td style="text-align: right;">${item.percentage}%</td>
                    <td style="text-align: right;">
                        <span class="trend-up">‚Üó +${trend}%</span>
                    </td>
                </tr>
            `;
        });

        // Export Functions
        function downloadChart(chartId) {
            const canvas = document.getElementById(chartId);
            const url = canvas.toDataURL('image/png');
            const link = document.createElement('a');
            link.download = `${chartId}_${new Date().toISOString().split('T')[0]}.png`;
            link.href = url;
            link.click();
            alert('ƒê√£ t·∫£i xu·ªëng bi·ªÉu ƒë·ªì!');
        }

        function exportKeywords() {
            const csv = 'STT,T·ª´ kh√≥a,S·ªë l∆∞·ª£t t√¨m\n' +
                data.topKeywords.map((k, i) => `${i + 1},${k.keyword},${k.count}`).join('\n');
            downloadCSV(csv, 'tu-khoa-tim-kiem');
        }

        function exportReport() {
            const csv = 'Danh m·ª•c,S·ªë l∆∞·ª£ng,T·ª∑ l·ªá\n' +
                data.categories.map(c => `${c.name},${c.count},${c.percentage}%`).join('\n');
            downloadCSV(csv, 'bao-cao-tong-quan');
        }

        function exportTableToExcel() {
            const csv = 'Danh m·ª•c,S·ªë l∆∞·ª£ng,T·ª∑ l·ªá,Xu h∆∞·ªõng\n' +
                data.categories.map(c => {
                    const trend = (Math.random() * 10).toFixed(1);
                    return `${c.name},${c.count},${c.percentage}%,+${trend}%`;
                }).join('\n');
            downloadCSV(csv, 'bang-tong-hop');
        }

        function downloadCSV(content, filename) {
            const BOM = '\uFEFF';
            const blob = new Blob([BOM + content], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `${filename}_${new Date().toISOString().split('T')[0]}.csv`;
            link.click();
            alert('ƒê√£ xu·∫•t b√°o c√°o th√†nh c√¥ng!');
        }
    </script>
</body>

</html>