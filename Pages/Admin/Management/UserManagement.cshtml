@page
@using PlantManagement.Pages.Shared
@model UserManagementModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "UserManagement";
}

@section Styles {
    <link rel="stylesheet" href="~/css/admin/user-management.css">
    <link rel="stylesheet" href="~/css/shared/pagination.css">
}


<div class="search-section">
    <form method="get" class="search-form">
        <input type="text" 
               name="SearchTerm" 
               value="@Model.SearchTerm" 
               placeholder="T√¨m ki·∫øm username ho·∫∑c email"
               class="search-input" />

        <select name="Status" class="status-select">
            <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
            <option value="locked" selected="@(Model.Status == "locked" ? "selected" : null)"> ƒê√£ kh√≥a</option>
            <option value="active" selected="@(Model.Status == "active" ? "selected" : null)"> Ho·∫°t ƒë·ªông</option>
        </select>

        <button type="submit" class="btn-search">T√¨m ki·∫øm</button>
    </form>
</div>

<div class="table-container">
    <table class="user-table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Role</th>
                <th>Tr·∫°ng th√°i</th>
                <th>H√†nh ƒë·ªông</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Users.Items.Any())
            {
                foreach (var user in Model.Users.Items)
                {
                    <tr>
                        <td><strong>@user.Username</strong></td>
                        <td>@user.Email</td>
                        <td><span class="role-badge">@user.Role</span></td>
                        <td>
                            <span class="status-badge @(user.IsLocked ? "status-locked" : "status-active")">
                                @(user.IsLocked ? " ƒê√£ kh√≥a" : " Ho·∫°t ƒë·ªông")
                            </span>
                        </td>
                        <td>
                            @if (user.UserId != Model.CurrentUserId)
                            {
                                <form method="post" 
                                      asp-page-handler="ToggleLock" 
                                      asp-route-id="@user.UserId" 
                                      class="action-form">
                                    <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                                    <input type="hidden" name="Status" value="@Model.Status" />
                                    <input type="hidden" name="CurrentPage" value="@Model.CurrentPage" />
                                    <input type="hidden" name="PageSize" value="@Model.PageSize" />
                                    <button type="submit" 
                                            class="btn-action @(user.IsLocked ? "btn-unlock" : "btn-lock")"
                                            onclick="return confirm('@(user.IsLocked ? "B·∫°n mu·ªën m·ªü kh√≥a t√†i kho·∫£n n√†y?" : "B·∫°n mu·ªën kh√≥a t√†i kho·∫£n n√†y?")');">
                                        @(user.IsLocked ? " M·ªü kh√≥a" : " Kh√≥a")
                                    </button>
                                </form>
                            }
                            else
                            {
                                <span class="current-user-text"> T√†i kho·∫£n c·ªßa b·∫°n</span>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="empty-state">
                        <div class="empty-state-icon">üì≠</div>
                        <div>Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†o.</div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.TotalPages > 1)
{
    var paginationModel = new PaginationModel
    {
        CurrentPage = Model.CurrentPage,
        TotalPages = Model.TotalPages,
        PageUrl = (page) => Url.Page("/Admin/Management/UserManagement", null, new
        {
            CurrentPage = page,
            SearchTerm = Model.SearchTerm,
            Status = Model.Status
        }, null) ?? "#"
    };

    <div class="pagination-container">
        @await Html.PartialAsync("Shared/_Pagination", paginationModel)
    </div>
}