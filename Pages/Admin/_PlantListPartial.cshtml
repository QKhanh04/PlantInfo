@model IndexModel

<!-- Plant Cards -->
<div id="plant-list">
    <div class="row plants-grid stagger-animation">
        @foreach (var plant in Model.Plants.Items)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card plant-card h-100">
                    <div class="plant-image">
                        @if (plant.ImageUrls != null && plant.ImageUrls.Any())
                        {
                            <img src="@plant.ImageUrls.First()" alt="@plant.CommonName">
                        }
                        else
                        {
                            <div class="plant-image-placeholder">
                                <i class="bi bi-image"></i>
                            </div>
                        }
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="plant-title">@plant.CommonName</h5>
                        <small class="plant-species">@plant.SpeciesName</small>
                        <p class="plant-description">@plant.Description</p>
                        <div class="category-badges mt-auto">
                            @foreach (var categoryName in plant.CategoryNames)
                            {
                                <span class="category-badge">@categoryName</span>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="action-buttons">
                            <a href="#" class="action-btn btn-edit">
                                <i class="bi bi-pencil-square"></i> Sửa
                            </a>
                            <a href="#" class="action-btn btn-delete">
                                <i class="bi bi-trash"></i> Xóa
                            </a>
                            <a asp-page="/Admin/Detail" asp-route-id="@plant.PlantId" class="action-btn btn-view">
                                <i class="bi bi-eye"></i> Chi tiết
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="pagination-container">
            <div class="pagination-info">
                <span class="text-muted">
                    Trang <strong>@Model.CurrentPage</strong> / <strong>@Model.TotalPages</strong>
                    <span class="ms-2">•</span>
                    <span class="ms-2">Tổng <strong>@Model.Plants.TotalCount</strong> cây</span>
                </span>
            </div>

            <nav aria-label="Phân trang" id="pagination">
                <ul class="pagination-modern mb-0">
                    <!-- First Page -->
                    <li class="page-item-modern @(Model.CurrentPage <= 1 ? "disabled" : "")">
                        <a class="page-link-modern page-first" href="javascript:void(0)" data-page="1" title="Trang đầu"
                            @(Model.CurrentPage <= 1 ? "disabled" : "")>
                            <i class="bi bi-chevron-double-left"></i>
                        </a>
                    </li>

                    <!-- Previous Page -->
                    <li class="page-item-modern @(Model.CurrentPage <= 1 ? "disabled" : "")">
                        <a class="page-link-modern page-prev" href="javascript:void(0)" data-page="@(Model.CurrentPage - 1)"
                            title="Trang trước">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                    </li>

                    @{
                        int start = Math.Max(1, Model.CurrentPage - 2);
                        int end = Math.Min(Model.TotalPages, Model.CurrentPage + 2);

                        if (Model.CurrentPage <= 3)
                        {
                            start = 1;
                            end = Math.Min(5, Model.TotalPages);
                        }
                        else if (Model.CurrentPage >= Model.TotalPages - 2)
                        {
                            end = Model.TotalPages;
                            start = Math.Max(1, Model.TotalPages - 4);
                        }
                    }

                    <!-- First page ellipsis -->
                    @if (start > 1)
                    {
                        <li class="page-item-modern">
                            <a class="page-link-modern page-number" href="javascript:void(0)" data-page="1">1</a>
                        </li>
                        @if (start > 2)
                        {
                            <li class="page-item-modern disabled">
                                <span class="page-link-modern page-ellipsis">...</span>
                            </li>
                        }
                    }

                    <!-- Page numbers -->
                    @for (int i = start; i <= end; i++)
                    {
                        <li class="page-item-modern @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link-modern page-number" href="javascript:void(0)" data-page="@i">
                                @i
                            </a>
                        </li>
                    }

                    <!-- Last page ellipsis -->
                    @if (end < Model.TotalPages)
                    {
                        @if (end < Model.TotalPages - 1)
                        {
                            <li class="page-item-modern disabled">
                                <span class="page-link-modern page-ellipsis">...</span>
                            </li>
                        }
                        <li class="page-item-modern">
                            <a class="page-link-modern page-number" href="javascript:void(0)" data-page="@Model.TotalPages">
                                @Model.TotalPages
                            </a>
                        </li>
                    }

                    <!-- Next Page -->
                    <li class="page-item-modern @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                        <a class="page-link-modern page-next" href="javascript:void(0)" data-page="@(Model.CurrentPage + 1)"
                            title="Trang sau">
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>

                    <!-- Last Page -->
                    <li class="page-item-modern @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                        <a class="page-link-modern page-last" href="javascript:void(0)" data-page="@Model.TotalPages"
                            title="Trang cuối">
                            <i class="bi bi-chevron-double-right"></i>
                        </a>
                    </li>
                </ul>
            </nav>

            <!-- Page Jump (Optional) -->
            <div class="page-jump">
                <span class="text-muted me-2">Đến trang:</span>
                <input type="number" class="page-jump-input" id="pageJumpInput" min="1" max="@Model.TotalPages"
                    value="@Model.CurrentPage" />
                <button class="btn-jump" id="btnJumpPage">
                    <i class="bi bi-arrow-right-circle"></i>
                </button>
            </div>
        </div>
    }
</div>

<style>
    /* Pagination Container */
    .pagination-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 1.5rem;
        margin-top: 3rem;
        padding: 1.5rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border-radius: 16px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.06);
    }

    /* Pagination Info */
    .pagination-info {
        font-size: 0.95rem;
    }

    .pagination-info strong {
        color: #2d5016;
        font-weight: 600;
    }

    /* Modern Pagination */
    .pagination-modern {
        display: flex;
        gap: 0.4rem;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .page-item-modern {
        display: inline-block;
    }

    .page-link-modern {
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: 40px;
        height: 40px;
        padding: 0.5rem;
        border: 2px solid transparent;
        border-radius: 10px;
        background: #ffffff;
        color: #495057;
        font-weight: 500;
        font-size: 0.9rem;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .page-link-modern:hover:not(.disabled):not(.page-ellipsis) {
        background: linear-gradient(135deg, #4a7c2c 0%, #5d9e3a 100%);
        color: #ffffff;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(74, 124, 44, 0.3);
        border-color: #4a7c2c;
    }

    /* Active Page */
    .page-item-modern.active .page-link-modern {
        background: linear-gradient(135deg, #4a7c2c 0%, #5d9e3a 100%);
        color: #ffffff;
        border-color: #4a7c2c;
        box-shadow: 0 4px 12px rgba(74, 124, 44, 0.4);
        font-weight: 600;
    }

    /* Disabled State */
    .page-item-modern.disabled .page-link-modern,
    .page-link-modern[disabled] {
        background: #f8f9fa;
        color: #cbd5e0;
        cursor: not-allowed;
        box-shadow: none;
    }

    .page-item-modern.disabled .page-link-modern:hover {
        transform: none;
    }

    /* Special Buttons */
    .page-first,
    .page-last {
        font-size: 0.85rem;
    }

    .page-prev,
    .page-next {
        font-size: 0.9rem;
    }

    .page-ellipsis {
        background: transparent !important;
        box-shadow: none !important;
        cursor: default !important;
        color: #adb5bd;
    }

    /* Page Jump */
    .page-jump {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .page-jump-input {
        width: 70px;
        height: 40px;
        padding: 0.5rem;
        border: 2px solid #e2e8f0;
        border-radius: 10px;
        text-align: center;
        font-size: 0.95rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .page-jump-input:focus {
        outline: none;
        border-color: #4a7c2c;
        box-shadow: 0 0 0 3px rgba(74, 124, 44, 0.1);
    }

    .btn-jump {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        padding: 0;
        border: none;
        border-radius: 10px;
        background: linear-gradient(135deg, #4a7c2c 0%, #5d9e3a 100%);
        color: #ffffff;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(74, 124, 44, 0.3);
    }

    .btn-jump:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(74, 124, 44, 0.4);
    }

    .btn-jump:active {
        transform: translateY(0);
    }

    /* Responsive Design */
    @media
    (max-width: 768px) {
        .pagination-container {
            flex-direction: column;
            gap: 1rem;
        }

        .pagination-info,
        .page-jump {
            width: 100%;
            justify-content: center;
        }

        .pagination-modern {
            flex-wrap: wrap;
            justify-content: center;
        }

        .page-link-modern {
            min-width: 36px;
            height: 36px;
            font-size: 0.85rem;
        }
    }

    @media
    (max-width: 576px) {
        .page-item-modern:not(.active):not(:first-child):not(:last-child):not(:nth-child(2)):not(:nth-last-child(2)) {
            display: none;
        }

        .page-jump {
            font-size: 0.85rem;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Page Jump functionality
        const pageJumpInput = document.getElementById('pageJumpInput');
        const btnJumpPage = document.getElementById('btnJumpPage');

        if (btnJumpPage && pageJumpInput) {
            btnJumpPage.addEventListener('click', function () {
                const pageNum = parseInt(pageJumpInput.value);
                const maxPages = parseInt(pageJumpInput.max);

                if (pageNum >= 1 && pageNum <= maxPages) {
                    // Call your pagination function here
                    loadPage(pageNum);
                } else {
                    alert('Vui lòng nhập số trang hợp lệ (1-' + maxPages + ')');
                }
            });

            pageJumpInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    btnJumpPage.click();
                }
            });
        }

        // Add animation when clicking pagination
        document.querySelectorAll('.page-link-modern').forEach(link => {
            link.addEventListener('click', function (e) {
                if (!this.parentElement.classList.contains('disabled') &&
                    !this.classList.contains('page-ellipsis')) {
                    this.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                }
            });
        });
    });
</script>