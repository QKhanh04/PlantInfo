@page
@model FavoritePlantModel
@{
    ViewData["Title"] = "Tra cứu cây trồng";
}

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tra Cứu Cây Trồng</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.0/font/bootstrap-icons.min.css"
        rel="stylesheet">
    <link rel="stylesheet" href="~/css/look-up-plant.css">
</head>

<body>

    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <!-- Page Header -->
    <section class="page-header">
        <div class="container-fluid">
            <h1 class="page-title"><i class="bi bi-heart me-3"></i>Cây yêu thích</h1>
        </div>
    </section>


    <!-- Plants Section with Sidebar Filter -->
    <section class="plants-section">
        <div class="container-fluid">
            <div class="row">
                <!-- Sidebar Filter -->
                <div class="col-lg-3 col-md-4">
                    <!-- Mobile Filter Toggle -->
                    <button class="filter-toggle-btn" id="filterToggleBtn">
                        <i class="bi bi-funnel me-2"></i>Bộ Lọc Tìm Kiếm
                    </button>

                    <div class="filter-sidebar" id="filterSidebar">
                        <h3><i class="bi bi-funnel me-2"></i>Bộ Lọc</h3>
                        <form id="filter-form">
                        @Html.AntiForgeryToken()
                            <div class="filter-group">
                                <label for="keyword">Tên cây trồng</label>
                                <input type="text" class="form-control" id="keyword" name="FilterVM.Keyword" placeholder="Nhập tên cây..."
                                    value="@Model.FilterVM?.Keyword">
                            </div>

                            <div class="filter-group">
                            <label>Danh mục</label>
                            <div class="checkbox-group">
                                @foreach (var cat in Model.Categories)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input"
                                            type="checkbox"
                                            value="@cat.CategoryId"
                                            id="cat_@cat.CategoryId"
                                            name="FilterVM.CategoryIds"
                                            @(Model.FilterVM.CategoryIds != null && Model.FilterVM.CategoryIds.Contains(cat.CategoryId) ? "checked" : "") />
                                        <label class="form-check-label" for="cat_@cat.CategoryId">
                                            @cat.CategoryName
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>

                            <div class="filter-group">
                            <label>Công Dụng</label>
                            <div class="checkbox-group">
                                @foreach (var u in Model.Uses)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input"
                                            type="checkbox"
                                            value="@u.UseId"
                                            id="use_@u.UseId"
                                            name="FilterVM.UseIds"
                                            @(Model.FilterVM.UseIds != null && Model.FilterVM.UseIds.Contains(u.UseId) ? "checked" : "") />
                                        <label class="form-check-label" for="use_@u.UseId">
                                            @u.UseName
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>

                             <div class="filter-group">
                            <label for="order">Bộ</label>
                            <select asp-for="FilterVM.OrderName" class="form-select" asp-items="@(new SelectList(Model.OrderList))">
                                <option value="">-- Tất cả bộ --</option>
                            </select>
                        </div>
                        <div class="filter-group">
                            <button type="submit" class="btn btn-filter" id="applyBtn">
                                <i class="bi bi-search me-2"></i>Tìm Kiếm
                            </button>
                            <button type="reset" class="btn btn-reset" id="resetBtn">
                                <i class="bi bi-arrow-counterclockwise me-2"></i>Xóa Bộ Lọc
                            </button>
                        </div>
                        </form>
                    </div>
                </div>

                <!-- Plants Grid -->
                <div class="col-lg-9 col-md-8">
                    <!-- Results Header -->
                    <div class="results-header">
                        <div class="results-count">
                            @* Tìm thấy <strong>@Model.Plants.TotalCount</strong> kết quả *@
                        </div>
                        <select class="form-select sort-select">
                            <option value="">Sắp xếp theo</option>
                            <option value="name-asc">Tên A-Z</option>
                            <option value="name-desc">Tên Z-A</option>
                            <option value="newest">Mới nhất</option>
                            <option value="popular">Phổ biến nhất</option>
                        </select>
                    </div>

                    @if (Model.Plants.Items != null && Model.Plants.Items.Any())
                    {
                        <div class="row g-4" id="plantsGrid">
                            @foreach (DTOs.PlantListDTO plant in Model.Plants.Items)
                            {
                                <div class="col-xl-3 col-lg-4 col-md-6">
                                    <div class="plant-card">
                                        <div class="plant-image">
                                            @if (plant.ImageUrls != null && plant.ImageUrls.Any())
                                            {
                                                <img src="@plant.ImageUrls.First()" alt="@plant.CommonName">
                                            }
                                            else
                                            {
                                                <div class="plant-image-placeholder">
                                                    <i class="bi bi-image"></i>
                                                </div>
                                            }
                              
                                            <button class="favorite-btn @(plant.IsFavorited ? "active" : "")" data-id="@plant.PlantId">
                                                <i class="bi bi-heart-fill"></i>
                                            </button>
                                        </div>
                                        <div class="card-body">
                                            <h5 class="plant-title">@plant.CommonName</h5>
                                            <span class="plant-species">@plant.SpeciesName</span>
                                            <div class="category-badges">
                                                @foreach (var categoryName in plant.CategoryNames)
                                                {
                                                    <span class="category-badge">@categoryName</span>
                                                }
                                            </div>
                                            <a asp-page="/Detail" asp-route-id="@plant.PlantId" class="view-detail-btn">
                                                <i class="bi bi-eye me-2"></i> Xem Chi Tiết
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <div class="pagination-wrapper">
                                <nav aria-label="Phân trang">
                                    <ul class="pagination mb-0">
                                        <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : "")">
                                            <a class="page-link" href="@(Model.CurrentPage > 1
                                                   ? Url.Page("/FavoritePlant", null, new {
                                                       CurrentPage = Model.CurrentPage - 1,
                                                       keyword = Model.FilterVM?.Keyword,
                                                       categoryId = Model.FilterVM?.CategoryId,
                                                       orderName = Model.FilterVM?.OrderName
                                                   }, null)
                                                   : "#")">
                                                <i class="bi bi-chevron-left"></i> Trước
                                            </a>
                                        </li>
                                        @{
                                            int start = Math.Max(1, Model.CurrentPage - 2);
                                            int end = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                                            if (Model.CurrentPage <= 3)
                                            {
                                                start = 1;
                                                end = Math.Min(5, Model.TotalPages);
                                            }
                                            else if (Model.CurrentPage >= Model.TotalPages - 2)
                                            {
                                                end = Model.TotalPages;
                                                start = Math.Max(1, Model.TotalPages - 4);
                                            }
                                        }
                                        @if (start > 1)
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Page("/FavoritePlant", null, new {
                                                       CurrentPage = 1,
                                                       keyword = Model.FilterVM?.Keyword,
                                                       categoryId = Model.FilterVM?.CategoryId,
                                                       orderName = Model.FilterVM?.OrderName
                                                   }, null)">
                                                    1
                                                </a>
                                            </li>
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        }
                                        @for (int i = start; i <= end; i++)
                                        {
                                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="@Url.Page("/FavoritePlant", null, new {
                                                       CurrentPage = i,
                                                       keyword = Model.FilterVM?.Keyword,
                                                       categoryId = Model.FilterVM?.CategoryId,
                                                       orderName = Model.FilterVM?.OrderName
                                                   }, null)">
                                                    @i
                                                </a>
                                            </li>
                                        }
                                        @if (end < Model.TotalPages)
                                        {
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Page("/FavoritePlant", null, new {
                                                       CurrentPage = Model.TotalPages,
                                                       keyword = Model.FilterVM?.Keyword,
                                                       categoryId = Model.FilterVM?.CategoryId,
                                                       orderName = Model.FilterVM?.OrderName
                                                   }, null)">
                                                    @Model.TotalPages
                                                </a>
                                            </li>
                                        }
                                        <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                                            <a class="page-link" href="@(Model.CurrentPage < Model.TotalPages
                                                   ? Url.Page("/FavoritePlant", null, new {
                                                       CurrentPage = Model.CurrentPage + 1,
                                                       keyword = Model.FilterVM?.Keyword,
                                                       categoryId = Model.FilterVM?.CategoryId,
                                                       orderName = Model.FilterVM?.OrderName
                                                   }, null)
                                                   : "#")">
                                                Sau <i class="bi bi-chevron-right"></i>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-results">
                            <i class="bi bi-search"></i>
                            <h3>Không tìm thấy kết quả</h3>
                            <p>Vui lòng thử lại với từ khóa hoặc bộ lọc khác</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
     $(document).ready(function () {
    var favorites = {};

    // Mobile filter toggle
    $('#filterToggleBtn').on('click', function () {
        $('#filterSidebar').toggleClass('show');
    });

    // Apply filter button
    $('#applyBtn').on('click', function (e) {
        e.preventDefault();
        filterPlants();
    });

    // Reset button
    $('#resetBtn').on('click', function (e) {
        e.preventDefault();
        $('#keyword').val('');
        $('input[name="FilterVM.CategoryIds"]').prop('checked', false);
        $('input[name="FilterVM.UseIds"]').prop('checked', false);
        $('#order').val('');
        filterPlants();
    });

    function filterPlants() {
        $('#loadingOverlay').addClass('show');

        // Collect selected categories
        var selectedCategories = [];
        $('input[name="FilterVM.CategoryIds"]:checked').each(function () {
            selectedCategories.push($(this).val());
        });

        // Collect selected usages
        var selectedUsages = [];
        $('input[name="FilterVM.UseIds"]:checked').each(function () {
            selectedUsages.push($(this).val());
        });

        var queryParams = new URLSearchParams();
        // Keyword
        if ($('#keyword').val()) queryParams.append('FilterVM.Keyword', $('#keyword').val());
        // Order
        if ($('#order').val()) queryParams.append('FilterVM.OrderName', $('#order').val());
        // Categories
        selectedCategories.forEach(function (c) {
            queryParams.append('FilterVM.CategoryIds', c);
        });
        // Usages
        selectedUsages.forEach(function (u) {
            queryParams.append('FilterVM.UseIds', u);
        });
        

        window.location.href = '/FavoritePlant?' + queryParams.toString();
    }

    var isLoggedIn = @(User.Identity.IsAuthenticated.ToString().ToLower());
    var loginUrl = '@Url.Page("/Auth/Authentication")';
    // Favorite functionality
    $('.favorite-btn').on('click', function (e) {
    e.preventDefault();
    if (!isLoggedIn) {
        window.location.href = loginUrl;
        return;
    }
    var btn = $(this);
    var plantId = btn.data('id');
    var token = $('input[name="__RequestVerificationToken"]').val(); // lấy token nếu dùng AntiForgery

    $.ajax({
        type: 'POST',
        url: '/LookUpPlant?handler=ToggleFavorite',
        data: { plantId: plantId, __RequestVerificationToken: token },
        success: function (response) {
            if (response.success) {
                btn.toggleClass('active', response.favorite);
            } else {
                alert(response.message);
                if (response.message === 'Bạn cần đăng nhập để yêu thích!') {
                    window.location.href = loginUrl;
                }
            }
        },
        error: function (xhr) {
            // Nếu cần debug thêm, xem xhr.status và responseText
            alert('Có lỗi xảy ra!');
        }
    });
});

    // Card hover effect
    $('.plant-card').hover(
        function () {
            $(this).addClass('shadow-lg');
        },
        function () {
            $(this).removeClass('shadow-lg');
        }
    );
});
    </script>
</body>

</html>